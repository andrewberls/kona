// Generated by CoffeeScript 1.3.3
(function() {

  Kona.ready(function() {
    return describe("Kona.Engine", function() {
      Kona.Canvas.init('canvas');
      describe("::queue", function() {
        it("queues functions if not running", function() {
          var fn;
          Kona.Engine.running = false;
          fn = function() {
            return "Hello World!";
          };
          Kona.Engine.queue(fn);
          return expect(Kona.Engine._queue).toContain(fn);
        });
        return it("executes functions if running", function() {
          var fn;
          Kona.Engine.running = true;
          fn = function() {
            throw new Error("Hello World!");
          };
          return expect(function() {
            return Kona.Engine.queue(fn);
          }).toThrow();
        });
      });
      return describe("::start", function() {
        beforeEach(function() {
          return spyOn(Kona.Engine, 'run');
        });
        it("throws an exception and then starts successfully", function() {
          var engineScene;
          expect(function() {
            return Kona.Engine.start();
          }).toThrow();
          engineScene = new Kona.Scene({
            name: 'engineScene',
            active: true
          });
          Kona.Engine.start();
          return expect(Kona.Engine.running).toBe(true);
        });
        it("flushes the queue", function() {
          var fn;
          Kona.Engine.running = false;
          fn = function() {
            throw new Error("Hello World!");
          };
          Kona.Engine.queue(fn);
          return expect(function() {
            return Kona.Engine.start();
          }).toThrow();
        });
        return it("calls run()", function() {
          Kona.Engine._queue = [];
          Kona.Engine.start();
          return expect(Kona.Engine.run).toHaveBeenCalled();
        });
      });
    });
  });

}).call(this);
